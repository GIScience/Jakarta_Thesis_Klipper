city_border:
  input: 'input/hd_border.geojson'
  preprocessed: 'preprocessed/hd_border.shp'

flood:
  input: 'input/flooded.shp'
  preprocessed: 'preprocessed/flooded.shp'

amenities:
  data: 'input/amenities.geojson'
  normal: 'preprocessed/healthsites.shp'
  flooded: 'preprocessed/healthsites_flooded.shp'
  data_hot: 'input/dki_hs'

population:
  data: 'input/population_2020.tif'
  extract: 'preprocessed/idn_ppp_2020_extract.tif'
  fillnan: 'preprocessed/idn_ppp_2020_extract_fillnan.tif'

# TODO: rename to accessed?
reached:
  normal: 'results/iso_normal.shp'
  flooded: 'preprocessed/iso_pre_flooded.shp'

networks:
  normal: 'results/normal/nodes_centrality.shp'
  flooded: 'results/flooded/nodes_centrality.shp'
  btwn_dif: 'results/flooded/nodes_btwn_dif.shp'
  cls_dif: 'results/flooded/nodes_cls_dif.shp'

# choose histogram bar color for the amount of provided flood layer (the first color visualizes the normal scenario):
# https://www.w3schools.com/colors/colors_picker.asp
bar_color: ['orange', '#3366ff']

# provide your openrouteservice api key (register for free: 'https://openrouteservice.org/dev/#/signup)
ors_api_key: ''

amenity_osm_values: ['hospital','clinic']
iso_range_values: [300, 600, 900, 1200, 1500, 1800]

speed_limits: 'ma_jakarta/scripts/network/speed_limits.yaml'